<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-10T12:31:47 IST" name="ParaBankSuite" finished-at="2025-08-10T12:33:59 IST" duration-ms="131806">
    <groups>
    </groups>
    <test started-at="2025-08-10T12:31:47 IST" name="SequentialTests" finished-at="2025-08-10T12:33:59 IST" duration-ms="131806">
      <class name="test.RegisterTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.RegisterTests@7f3b84b8]" started-at="2025-08-10T12:31:47 IST" name="beforeSuite" finished-at="2025-08-10T12:31:47 IST" duration-ms="346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.RegisterTests@7f3b84b8]" started-at="2025-08-10T12:31:47 IST" name="setUp" finished-at="2025-08-10T12:31:54 IST" duration-ms="6402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.RegisterTests.registerProvidedUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registerProvidedUser()[pri:1, instance:test.RegisterTests@7f3b84b8]" started-at="2025-08-10T12:31:54 IST" name="registerProvidedUser" finished-at="2025-08-10T12:31:58 IST" duration-ms="4432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerProvidedUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.RegisterTests@7f3b84b8]" started-at="2025-08-10T12:31:58 IST" name="tearDown" finished-at="2025-08-10T12:31:59 IST" duration-ms="265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerProvidedUser status=SUCCESS method=RegisterTests.registerProvidedUser()[pri:1, instance:test.RegisterTests@7f3b84b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.RegisterTests@7f3b84b8]" started-at="2025-08-10T12:33:59 IST" name="afterSuite" finished-at="2025-08-10T12:34:00 IST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.RegisterTests -->
      <class name="test.NavigationUITest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.NavigationUITest@4efbca5a]" started-at="2025-08-10T12:33:51 IST" name="setUp" finished-at="2025-08-10T12:33:55 IST" duration-ms="3986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.NavigationUITest.navigationAndLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigationAndLogo()[pri:12, instance:test.NavigationUITest@4efbca5a]" started-at="2025-08-10T12:33:55 IST" name="navigationAndLogo" finished-at="2025-08-10T12:33:59 IST" duration-ms="4223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigationAndLogo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.NavigationUITest@4efbca5a]" started-at="2025-08-10T12:33:59 IST" name="tearDown" finished-at="2025-08-10T12:33:59 IST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigationAndLogo status=SUCCESS method=NavigationUITest.navigationAndLogo()[pri:12, instance:test.NavigationUITest@4efbca5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.NavigationUITest -->
      <class name="test.FundsTransferTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:32:26 IST" name="setUp" finished-at="2025-08-10T12:32:30 IST" duration-ms="3941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FundsTransferTest.validTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validTransfer()[pri:6, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:32:30 IST" name="validTransfer" finished-at="2025-08-10T12:32:43 IST" duration-ms="13919" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.id: fromAccountID (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.id: fromAccountID (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at page.TransferFundsPage.selectFromByValue(TransferFundsPage.java:54)
at test.FundsTransferTest.validTransfer(FundsTransferTest.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#fromAccountID"}
  (Session info: chrome=138.0.7204.184)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e0624cc939b843847b1e17d6f7439086, findElement {using=id, value=fromAccountID}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60958}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60958/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e0624cc939b843847b1e17d6f7439086
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validTransfer -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:32:44 IST" name="tearDown" finished-at="2025-08-10T12:32:44 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validTransfer status=FAILURE method=FundsTransferTest.validTransfer()[pri:6, instance:test.FundsTransferTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:32:44 IST" name="setUp" finished-at="2025-08-10T12:32:48 IST" duration-ms="3610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FundsTransferTest.transferInsufficientBalance()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="transferInsufficientBalance()[pri:7, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:32:48 IST" name="transferInsufficientBalance" finished-at="2025-08-10T12:33:01 IST" duration-ms="13537" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.id: fromAccountID (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.id: fromAccountID (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at page.TransferFundsPage.selectFromByValue(TransferFundsPage.java:54)
at test.FundsTransferTest.transferInsufficientBalance(FundsTransferTest.java:53)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#fromAccountID"}
  (Session info: chrome=138.0.7204.184)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0832cfe9d35bfb8ad34a3cdc4e3788df, findElement {using=id, value=fromAccountID}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.184, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\cdkar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60985}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60985/devtoo..., se:cdpVersion: 138.0.7204.184, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0832cfe9d35bfb8ad34a3cdc4e3788df
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:168)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transferInsufficientBalance -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.FundsTransferTest@49139829]" started-at="2025-08-10T12:33:01 IST" name="tearDown" finished-at="2025-08-10T12:33:02 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transferInsufficientBalance status=FAILURE method=FundsTransferTest.transferInsufficientBalance()[pri:7, instance:test.FundsTransferTest@49139829] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.FundsTransferTest -->
      <class name="test.LoanRequestTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:02 IST" name="setUp" finished-at="2025-08-10T12:33:07 IST" duration-ms="5979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoanRequestTest.requestLoanValid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="requestLoanValid()[pri:8, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:07 IST" name="requestLoanValid" finished-at="2025-08-10T12:33:12 IST" duration-ms="4990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestLoanValid -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:12 IST" name="tearDown" finished-at="2025-08-10T12:33:14 IST" duration-ms="1723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestLoanValid status=SUCCESS method=LoanRequestTest.requestLoanValid()[pri:8, instance:test.LoanRequestTest@9597028] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:14 IST" name="setUp" finished-at="2025-08-10T12:33:19 IST" duration-ms="4581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoanRequestTest.requestLoanMissingInfo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="requestLoanMissingInfo()[pri:9, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:19 IST" name="requestLoanMissingInfo" finished-at="2025-08-10T12:33:33 IST" duration-ms="14450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestLoanMissingInfo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoanRequestTest@9597028]" started-at="2025-08-10T12:33:33 IST" name="tearDown" finished-at="2025-08-10T12:33:33 IST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestLoanMissingInfo status=SUCCESS method=LoanRequestTest.requestLoanMissingInfo()[pri:9, instance:test.LoanRequestTest@9597028] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoanRequestTest -->
      <class name="test.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:31:59 IST" name="setUp" finished-at="2025-08-10T12:32:03 IST" duration-ms="4098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.validLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLogin()[pri:2, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:03 IST" name="validLogin" finished-at="2025-08-10T12:32:06 IST" duration-ms="3077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:06 IST" name="tearDown" finished-at="2025-08-10T12:32:06 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=LoginTest.validLogin()[pri:2, instance:test.LoginTest@4ec4f3a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:06 IST" name="setUp" finished-at="2025-08-10T12:32:10 IST" duration-ms="4459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidPassword()[pri:3, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:10 IST" name="invalidPassword" finished-at="2025-08-10T12:32:13 IST" duration-ms="2262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:13 IST" name="tearDown" finished-at="2025-08-10T12:32:13 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTest.invalidPassword()[pri:3, instance:test.LoginTest@4ec4f3a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:13 IST" name="setUp" finished-at="2025-08-10T12:32:16 IST" duration-ms="3618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.emptyFieldsLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="emptyFieldsLogin()[pri:4, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:16 IST" name="emptyFieldsLogin" finished-at="2025-08-10T12:32:19 IST" duration-ms="2079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyFieldsLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@4ec4f3a0]" started-at="2025-08-10T12:32:19 IST" name="tearDown" finished-at="2025-08-10T12:32:19 IST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptyFieldsLogin status=SUCCESS method=LoginTest.emptyFieldsLogin()[pri:4, instance:test.LoginTest@4ec4f3a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoginTest -->
      <class name="test.AccountTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.AccountTest@223191a6]" started-at="2025-08-10T12:32:19 IST" name="setUp" finished-at="2025-08-10T12:32:22 IST" duration-ms="3648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.AccountTest.accountsOverviewAndTable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountsOverviewAndTable()[pri:5, instance:test.AccountTest@223191a6]" started-at="2025-08-10T12:32:22 IST" name="accountsOverviewAndTable" finished-at="2025-08-10T12:32:25 IST" duration-ms="3087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsOverviewAndTable -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AccountTest@223191a6]" started-at="2025-08-10T12:32:25 IST" name="tearDown" finished-at="2025-08-10T12:32:26 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountsOverviewAndTable status=SUCCESS method=AccountTest.accountsOverviewAndTable()[pri:5, instance:test.AccountTest@223191a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AccountTest -->
      <class name="test.CustomerSupportTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:33 IST" name="setUp" finished-at="2025-08-10T12:33:39 IST" duration-ms="5247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.CustomerSupportTest.contactFormSubmitValid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="contactFormSubmitValid()[pri:10, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:39 IST" name="contactFormSubmitValid" finished-at="2025-08-10T12:33:43 IST" duration-ms="4265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormSubmitValid -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:43 IST" name="tearDown" finished-at="2025-08-10T12:33:43 IST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormSubmitValid status=SUCCESS method=CustomerSupportTest.contactFormSubmitValid()[pri:10, instance:test.CustomerSupportTest@6069db50] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:43 IST" name="setUp" finished-at="2025-08-10T12:33:48 IST" duration-ms="4884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.CustomerSupportTest.contactFormEmpty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="contactFormEmpty()[pri:11, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:48 IST" name="contactFormEmpty" finished-at="2025-08-10T12:33:51 IST" duration-ms="2522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormEmpty -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CustomerSupportTest@6069db50]" started-at="2025-08-10T12:33:51 IST" name="tearDown" finished-at="2025-08-10T12:33:51 IST" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormEmpty status=SUCCESS method=CustomerSupportTest.contactFormEmpty()[pri:11, instance:test.CustomerSupportTest@6069db50] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CustomerSupportTest -->
    </test> <!-- SequentialTests -->
  </suite> <!-- ParaBankSuite -->
</testng-results>
