<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-10T12:44:33 IST" name="ParaBankSuite" finished-at="2025-08-10T12:46:24 IST" duration-ms="111583">
    <groups>
    </groups>
    <test started-at="2025-08-10T12:44:33 IST" name="SequentialTests" finished-at="2025-08-10T12:46:24 IST" duration-ms="111583">
      <class name="test.RegisterTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:test.RegisterTests@62ddbd7e]" started-at="2025-08-10T12:44:32 IST" name="beforeSuite" finished-at="2025-08-10T12:44:33 IST" duration-ms="265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.RegisterTests@62ddbd7e]" started-at="2025-08-10T12:44:33 IST" name="setUp" finished-at="2025-08-10T12:44:39 IST" duration-ms="6658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.RegisterTests.registerProvidedUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registerProvidedUser()[pri:1, instance:test.RegisterTests@62ddbd7e]" started-at="2025-08-10T12:44:39 IST" name="registerProvidedUser" finished-at="2025-08-10T12:44:43 IST" duration-ms="3851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerProvidedUser -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.RegisterTests@62ddbd7e]" started-at="2025-08-10T12:44:43 IST" name="tearDown" finished-at="2025-08-10T12:44:43 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerProvidedUser status=SUCCESS method=RegisterTests.registerProvidedUser()[pri:1, instance:test.RegisterTests@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.RegisterTests@62ddbd7e]" started-at="2025-08-10T12:46:24 IST" name="afterSuite" finished-at="2025-08-10T12:46:25 IST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.RegisterTests -->
      <class name="test.NavigationUITest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.NavigationUITest@4e08711f]" started-at="2025-08-10T12:46:15 IST" name="setUp" finished-at="2025-08-10T12:46:19 IST" duration-ms="4280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.NavigationUITest.navigationAndLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigationAndLogo()[pri:12, instance:test.NavigationUITest@4e08711f]" started-at="2025-08-10T12:46:19 IST" name="navigationAndLogo" finished-at="2025-08-10T12:46:24 IST" duration-ms="4540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigationAndLogo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.NavigationUITest@4e08711f]" started-at="2025-08-10T12:46:24 IST" name="tearDown" finished-at="2025-08-10T12:46:24 IST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigationAndLogo status=SUCCESS method=NavigationUITest.navigationAndLogo()[pri:12, instance:test.NavigationUITest@4e08711f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.NavigationUITest -->
      <class name="test.FundsTransferTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:10 IST" name="setUp" finished-at="2025-08-10T12:45:14 IST" duration-ms="3552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FundsTransferTest.validTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validTransfer()[pri:6, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:14 IST" name="validTransfer" finished-at="2025-08-10T12:45:19 IST" duration-ms="5084" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expect confirmation or feedback after transfer expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expect confirmation or feedback after transfer expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.FundsTransferTest.validTransfer(FundsTransferTest.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validTransfer -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:19 IST" name="tearDown" finished-at="2025-08-10T12:45:19 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validTransfer status=FAILURE method=FundsTransferTest.validTransfer()[pri:6, instance:test.FundsTransferTest@79079097] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:19 IST" name="setUp" finished-at="2025-08-10T12:45:23 IST" duration-ms="3191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FundsTransferTest.transferInsufficientBalance()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="transferInsufficientBalance()[pri:7, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:23 IST" name="transferInsufficientBalance" finished-at="2025-08-10T12:45:28 IST" duration-ms="5248" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.FundsTransferTest.transferInsufficientBalance(FundsTransferTest.java:67)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- transferInsufficientBalance -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.FundsTransferTest@79079097]" started-at="2025-08-10T12:45:28 IST" name="tearDown" finished-at="2025-08-10T12:45:28 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=transferInsufficientBalance status=FAILURE method=FundsTransferTest.transferInsufficientBalance()[pri:7, instance:test.FundsTransferTest@79079097] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.FundsTransferTest -->
      <class name="test.LoanRequestTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:28 IST" name="setUp" finished-at="2025-08-10T12:45:32 IST" duration-ms="4079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoanRequestTest.requestLoanValid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="requestLoanValid()[pri:8, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:32 IST" name="requestLoanValid" finished-at="2025-08-10T12:45:38 IST" duration-ms="5777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestLoanValid -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:38 IST" name="tearDown" finished-at="2025-08-10T12:45:38 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestLoanValid status=SUCCESS method=LoanRequestTest.requestLoanValid()[pri:8, instance:test.LoanRequestTest@4d1c00d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:38 IST" name="setUp" finished-at="2025-08-10T12:45:44 IST" duration-ms="5359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoanRequestTest.requestLoanMissingInfo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="requestLoanMissingInfo()[pri:9, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:44 IST" name="requestLoanMissingInfo" finished-at="2025-08-10T12:45:58 IST" duration-ms="14505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestLoanMissingInfo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoanRequestTest@4d1c00d0]" started-at="2025-08-10T12:45:58 IST" name="tearDown" finished-at="2025-08-10T12:45:59 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestLoanMissingInfo status=SUCCESS method=LoanRequestTest.requestLoanMissingInfo()[pri:9, instance:test.LoanRequestTest@4d1c00d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoanRequestTest -->
      <class name="test.LoginTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:43 IST" name="setUp" finished-at="2025-08-10T12:44:47 IST" duration-ms="3519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.validLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validLogin()[pri:2, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:47 IST" name="validLogin" finished-at="2025-08-10T12:44:51 IST" duration-ms="4291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:51 IST" name="tearDown" finished-at="2025-08-10T12:44:51 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=LoginTest.validLogin()[pri:2, instance:test.LoginTest@3c9754d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:51 IST" name="setUp" finished-at="2025-08-10T12:44:55 IST" duration-ms="3848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="invalidPassword()[pri:3, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:55 IST" name="invalidPassword" finished-at="2025-08-10T12:44:57 IST" duration-ms="2169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:57 IST" name="tearDown" finished-at="2025-08-10T12:44:58 IST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTest.invalidPassword()[pri:3, instance:test.LoginTest@3c9754d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:44:58 IST" name="setUp" finished-at="2025-08-10T12:45:01 IST" duration-ms="3280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.LoginTest.emptyFieldsLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="emptyFieldsLogin()[pri:4, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:45:01 IST" name="emptyFieldsLogin" finished-at="2025-08-10T12:45:03 IST" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyFieldsLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@3c9754d8]" started-at="2025-08-10T12:45:03 IST" name="tearDown" finished-at="2025-08-10T12:45:03 IST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptyFieldsLogin status=SUCCESS method=LoginTest.emptyFieldsLogin()[pri:4, instance:test.LoginTest@3c9754d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.LoginTest -->
      <class name="test.AccountTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.AccountTest@3bf7ca37]" started-at="2025-08-10T12:45:03 IST" name="setUp" finished-at="2025-08-10T12:45:07 IST" duration-ms="3948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.AccountTest.accountsOverviewAndTable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="accountsOverviewAndTable()[pri:5, instance:test.AccountTest@3bf7ca37]" started-at="2025-08-10T12:45:07 IST" name="accountsOverviewAndTable" finished-at="2025-08-10T12:45:10 IST" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsOverviewAndTable -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.AccountTest@3bf7ca37]" started-at="2025-08-10T12:45:10 IST" name="tearDown" finished-at="2025-08-10T12:45:10 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=accountsOverviewAndTable status=SUCCESS method=AccountTest.accountsOverviewAndTable()[pri:5, instance:test.AccountTest@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.AccountTest -->
      <class name="test.CustomerSupportTest">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:45:59 IST" name="setUp" finished-at="2025-08-10T12:46:04 IST" duration-ms="5228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.CustomerSupportTest.contactFormSubmitValid()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="contactFormSubmitValid()[pri:10, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:46:04 IST" name="contactFormSubmitValid" finished-at="2025-08-10T12:46:07 IST" duration-ms="3209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormSubmitValid -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:46:07 IST" name="tearDown" finished-at="2025-08-10T12:46:07 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormSubmitValid status=SUCCESS method=CustomerSupportTest.contactFormSubmitValid()[pri:10, instance:test.CustomerSupportTest@4b2bac3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:46:07 IST" name="setUp" finished-at="2025-08-10T12:46:13 IST" duration-ms="5480" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.CustomerSupportTest.contactFormEmpty()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="contactFormEmpty()[pri:11, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:46:13 IST" name="contactFormEmpty" finished-at="2025-08-10T12:46:15 IST" duration-ms="2371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactFormEmpty -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:test.CustomerSupportTest@4b2bac3f]" started-at="2025-08-10T12:46:15 IST" name="tearDown" finished-at="2025-08-10T12:46:15 IST" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactFormEmpty status=SUCCESS method=CustomerSupportTest.contactFormEmpty()[pri:11, instance:test.CustomerSupportTest@4b2bac3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.CustomerSupportTest -->
    </test> <!-- SequentialTests -->
  </suite> <!-- ParaBankSuite -->
</testng-results>
